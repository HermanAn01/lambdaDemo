package com.example.demo;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;


@RestController
@RequestMapping("/demo")
public class DemoController {

    @Resource
    private LambdaService lambdaService;

    @PostMapping("test")
    public void demo(@RequestBody Bean bean){

        String res = "[\"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\"]";
        //lambdaService.sendRequest(LambdaEnum.LB_SM);
        System.out.println(res);
        if("".equals(res)){
            System.out.println("无效返回值");
            return;
        }
        try {
            String ret = lambdaService.decryptForBc(res, bean.getPrivateKey());
            System.out.println(ret);
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        System.out.println("demo");
    }
}
